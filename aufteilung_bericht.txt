Aufteilung über Bereiche des Berichtes:

[Dominic] 
(Spezielles/Datanbank)
- Authentifizierung (Annotation)
	- Generelle Notwendigkeit
	- Generelles Verfahren (Session)
	- zwei mögliche Lösungen (Component / Typestry Way mit Annotation und App-Module)
	- Erweiterungsmöglichkeiten
- Datenbank (Entities, DAOs, Bilder in DB)
	- Generelles Verfahren (Hibernate, POJOs mit Annotationen)
	- Spezielles: Inverse Relationen + Bilder als Byte-Array
	- Notwedigkeit von DAOs (duplizierter Code)
- Dartellung der Bilder
	- Die spezielle Page für User-Avatare (Idee/Verwendung)
	- Umsetzung mit Streams und Graphics2d für die Skalierung
- Pagination
	- Generelle Notwendigkeit
	- zwei mögliche Lösungen (Tapestry unabhängig mittels Ajax / eigene Tapestry-Component)
	- Funktionsweise
	- Erweiterungsmöglichkeiten

[Dominik]
(LeanLib-Testen)
- warum welche Sub-Graphen, etc.
- Probleme
(Zusammenfassung/Schluss)
- Zusammenfassung


[Nico]
(Design)
- Usability (Design, Struktur (Links))
- Entscheidungen warum welche Page/Component


[Dennis] 
(quasi Einleitendes)
- Anfang (Vorüberlegungen, Planung, Probleme)
- Projekt-/Team-Planung
- bissl was zu Git/gitHub

